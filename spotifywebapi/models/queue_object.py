# -*- coding: utf-8 -*-

"""
spotifywebapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from spotifywebapi.api_helper import APIHelper


class QueueObject(object):

    """Implementation of the 'QueueObject' model.

    TODO: type model description here.

    Attributes:
        currently_playing (object): The currently playing track or episode.
            Can be `null`.
        queue (List[object]): The tracks or episodes in the queue. Can be
            empty.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "currently_playing": 'currently_playing',
        "queue": 'queue'
    }

    _optionals = [
        'currently_playing',
        'queue',
    ]

    def __init__(self,
                 currently_playing=APIHelper.SKIP,
                 queue=APIHelper.SKIP):
        """Constructor for the QueueObject class"""

        # Initialize members of the class
        if currently_playing is not APIHelper.SKIP:
            self.currently_playing = currently_playing 
        if queue is not APIHelper.SKIP:
            self.queue = queue 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        currently_playing = dictionary.get("currently_playing") if dictionary.get("currently_playing") else APIHelper.SKIP
        queue = dictionary.get("queue") if dictionary.get("queue") else APIHelper.SKIP
        # Return an object of this model
        return cls(currently_playing,
                   queue)
