# -*- coding: utf-8 -*-

"""
spotifywebapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from spotifywebapi.api_helper import APIHelper
from spotifywebapi.models.paging_playlist_object import PagingPlaylistObject


class PagingFeaturedPlaylistObject(object):

    """Implementation of the 'PagingFeaturedPlaylistObject' model.

    TODO: type model description here.

    Attributes:
        message (str): The localized message of a playlist.
        playlists (PagingPlaylistObject): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "message": 'message',
        "playlists": 'playlists'
    }

    _optionals = [
        'message',
        'playlists',
    ]

    def __init__(self,
                 message=APIHelper.SKIP,
                 playlists=APIHelper.SKIP):
        """Constructor for the PagingFeaturedPlaylistObject class"""

        # Initialize members of the class
        if message is not APIHelper.SKIP:
            self.message = message 
        if playlists is not APIHelper.SKIP:
            self.playlists = playlists 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        message = dictionary.get("message") if dictionary.get("message") else APIHelper.SKIP
        playlists = PagingPlaylistObject.from_dictionary(dictionary.get('playlists')) if 'playlists' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(message,
                   playlists)
